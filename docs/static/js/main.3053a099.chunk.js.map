{"version":3,"sources":["utils.js","sounds.js","components/Controls.js","components/Timer.js","components/Log.js","components/App.js","index.js"],"names":["pad","num","str","length","timeToString","time","minutes","Math","floor","seconds","concat","notify","message","window","Notification","permission","requestPermission","then","console","log","Player","_ref","audioContext","filterNode","Object","classCallCheck","this","audioCtx","gainNode","createGain","timeOffset","connect","destination","oscillator","freq","_ref2","frequency","setValueAtTime","currentTime","vol","_ref3","gain","exponentialRampToValueAtTime","type","_ref4","_ref5","createOscillator","setFrequency","setWaveType","setVolume","start","_ref6","setTargetAtTime","stop","Controls","running","onStart","onShortBreak","onLongBreak","onClear","react_default","a","createElement","className","onClick","Fragment","Timer","watch","String","fromCodePoint","Log","history","onRemoveHistory","map","item","index","key","tomato","durations","App","_useState","useState","_useState2","slicedToArray","setRunning","_useState3","_useState4","setTime","_useState5","_useState6","setHistory","useEffect","interval","setInterval","stopTimer","document","title","clearInterval","startTimer","duration","Date","toLocaleTimeString","hour12","hour","minute","toConsumableArray","objectSpread","done","AudioContext","webkitAudioContext","play","beep","components_Timer","components_Controls","components_Log","filter","_","i","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.3053a099.chunk.js","sourcesContent":["// ensure numbers are always two digits\nconst pad = num => {\n  const str = num + \"\";\n  return str.length === 2 ? str : \"0\" + str;\n};\n\nexport const timeToString = time => {\n  const minutes = pad(Math.floor(time / 60));\n  const seconds = pad(time % 60);\n  return `${minutes}:${seconds}`;\n};\n\nexport const notify = message => {\n  if (!(\"Notification\" in window)) {\n    console.log('This browser does not support dekstop notifications');\n  }\n\n  else if (Notification.permission === 'granted') {\n    new Notification(message);\n  }\n\n  else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then((permission) => {\n      if (permission === 'granted') {\n        new Notification(message);\n      }\n    })\n  }\n};","class Player {\n  constructor({ audioContext, filterNode }) {\n    this.audioCtx = audioContext;\n    this.gainNode = this.audioCtx.createGain();\n    this.timeOffset = 0.2;\n    if(filterNode) {\n      // run output through extra filter (already connected to audioContext)\n      this.gainNode.connect(filterNode);\n    } else {\n      this.gainNode.connect(this.audioCtx.destination);\n    }\n    this.oscillator = null;\n  }\n\n  setFrequency({ freq, time }) {\n    if (time) {\n      this.oscillator.frequency.setValueAtTime(freq, this.audioCtx.currentTime + time);\n    } else {\n      this.oscillator.frequency.setValueAtTime(freq, this.audioCtx.currentTime);\n    }\n    return this;\n  }\n\n  setVolume({ vol, time}) {\n    if (time) {\n      this.gainNode.gain.exponentialRampToValueAtTime(vol, this.audioCtx.currentTime + time);\n    } else {\n      this.gainNode.gain.setValueAtTime(vol, this.audioCtx.currentTime);\n    }\n    return this;\n  }\n\n  setWaveType({ type }) {\n    this.oscillator.type = type;\n    return this;\n  }\n\n  play({ freq, vol, type, time }) {\n    this.oscillator = this.audioCtx.createOscillator();\n    this.oscillator.connect(this.gainNode);\n\n    this.setFrequency({ freq });\n    if (type) this.setWaveType({ type });\n    this.setVolume({ vol: vol / 10 });\n\n    if (time) {\n      this.setVolume({ vol, time: time - this.timeOffset });\n      this.oscillator.start(time - this.timeOffset);\n      this.setVolume({ vol: vol / 10, time });\n    } else {\n      this.oscillator.start();\n      this.setVolume({ vol, time: this.timeOffset });\n    }\n    return this;\n  }\n\n  stop({ time }) {\n    if (time) {\n      this.gainNode.gain.setTargetAtTime(1/1000, this.audioCtx.currentTime + time - 0.05, this.timeOffset);\n      this.oscillator.stop(this.audioCtx.currentTime + time);\n    } else {\n      this.gainNode.gain.setTargetAtTime(1/1000, this.audioCtx.currentTime, this.timeOffset);\n      this.oscillator.stop(this.audioCtx.currentTime + 0.05);\n    }\n    return this;\n  }\n}\n\nexport const beep = () => {\n  const ctx = window.AudioContext || window.webkitAudioContext;\n  const audioContext = new ctx();\n  const player = new Player({ audioContext });\n\n  player\n    .play({ freq: 440, vol: 0.8, type: 'square' })\n    .setFrequency({ freq: 880, time: 0.1 })\n    .stop({ time: 0.2 });\n};","import React from 'react';\n\nconst Controls = ({\n  running,\n  onStart,\n  onShortBreak,\n  onLongBreak,\n  onClear\n }) => (\n  <section className=\"controls\">\n    {!running && (\n      <button\n        className=\"green start\"\n        onClick={onStart}\n       >\n        start\n      </button>\n    )}\n\n    {running && (\n      <button\n        className=\"gray clear\"\n        onClick={onClear}\n      >\n        clear\n      </button>\n    )}\n\n    {!running && (\n      <>\n        <button\n          className=\"red break\"\n          onClick={onShortBreak}\n        >\n          break\n        </button>\n        <button\n          className=\"red break-long\"\n          onClick={onLongBreak}\n        >\n          long break\n        </button>\n      </>\n    )}\n  </section>\n);\n\nexport default Controls;","import React from 'react';\nimport { timeToString } from '../utils';\n\nconst Timer = ({ time }) => (\n  <section className=\"timer\">\n    <h1>{timeToString(time)}</h1>\n  </section>\n);\n\nexport default Timer;","import React from 'react';\n\nconst watch = String.fromCodePoint(0x231A);\n\nconst Log = ({ history, onRemoveHistory }) => (\n  <>\n    {history.length !== 0 &&\n      <section className=\"log\">\n        <h3>{watch} History</h3>\n        <ul>\n          {history.map((item, index) => (\n            <li key={index}>\n              {item.time}\n              {' - '}\n              {item.type}\n              {' ('}\n              {Math.floor(item.length / 60)}\n              {' minutes) '}\n\n              <span\n                className=\"remove\"\n                onClick={() => onRemoveHistory(index)}\n              >\n                delete\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    }\n  </>\n);\n\nexport default Log;","import React, { useState, useEffect } from 'react';\nimport { timeToString, notify } from '../utils';\nimport { beep } from '../sounds';\nimport Controls from './Controls';\nimport Timer from './Timer';\nimport Log from './Log';\n\nconst tomato = String.fromCodePoint(0x1F345);\n\nconst durations = {\n  POMO: { length: 1500, type: 'pomo' },\n  SHORT: { length: 300, type: 'break' },\n  LONG: { length: 900, type: 'break' },\n};\n\nnotify('Ready to start!');\n\nconst App = () => {\n  const [running, setRunning] = useState(false);\n  const [time, setTime] = useState(durations.POMO.length);\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (time === 0) {\n        stopTimer(true);\n        return false;\n      }\n      if (running) {\n        document.title = `${timeToString(time - 1)} - Pomo`;\n        setTime(time => time - 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [running, setRunning, time]);\n\n  const startTimer = duration => {\n    const time  =new Date().toLocaleTimeString('en-US', {\n      hour12: true,\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    setTime(duration.length);\n    setRunning(true);\n    setHistory([\n      ...history,\n      { ...duration, time }\n    ]);\n  };\n\n  const stopTimer = done => {\n    setRunning(false);\n    setTime(durations.POMO.length);\n    document.title = 'zstix - Pomo';\n    if (done) {\n      beep();\n      notify('Timer Complete!')\n    }\n  }\n\n  const removeHistory = index => {\n    setHistory(history.filter((_, i) => i !== index));\n  };\n  \n  return (\n    <div>\n      <div className=\"wrapper\">\n        <h2>{tomato} Pomodoro Timer</h2>\n\n        <Timer time={time} />\n\n        <Controls\n          running={running}\n          onStart={() => startTimer(durations.POMO)}\n          onShortBreak={() => startTimer(durations.SHORT)}\n          onLongBreak={() => startTimer(durations.LONG)}\n          onClear={() => stopTimer()}\n         />\n\n         <Log\n          history={history}\n          onRemoveHistory={removeHistory}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}