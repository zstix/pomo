{"version":3,"sources":["components/Controls.js","components/Timer.js","components/Log.js","components/App.js","index.js"],"names":["Controls","_ref","running","onStart","onShortBreak","onLongBreak","onClear","react_default","a","createElement","className","onClick","Fragment","pad","num","str","length","Timer","time","minutes","Math","floor","seconds","watch","String","fromCodePoint","Log","history","onRemoveHistory","map","item","index","key","type","tomato","durations","App","_useState","useState","_useState2","Object","slicedToArray","setRunning","_useState3","_useState4","setTime","_useState5","_useState6","setHistory","useEffect","interval","setInterval","clearInterval","startTimer","duration","Date","toLocaleTimeString","hour12","hour","minute","concat","toConsumableArray","objectSpread","components_Timer","components_Controls","components_Log","filter","_","i","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.584fb254.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({\n  running,\n  onStart,\n  onShortBreak,\n  onLongBreak,\n  onClear\n }) => (\n  <section className=\"controls\">\n    {!running && (\n      <button\n        className=\"green start\"\n        onClick={onStart}\n       >\n        start\n      </button>\n    )}\n\n    {running && (\n      <button\n        className=\"gray clear\"\n        onClick={onClear}\n      >\n        clear\n      </button>\n    )}\n\n    {!running && (\n      <>\n        <button\n          className=\"red break\"\n          onClick={onShortBreak}\n        >\n          break\n        </button>\n        <button\n          className=\"red break-long\"\n          onClick={onLongBreak}\n        >\n          long break\n        </button>\n      </>\n    )}\n  </section>\n);\n\nexport default Controls;","import React from 'react';\n\n// ensure numbers are always two digits\nconst pad = num => {\n  const str = num + \"\";\n  return str.length === 2 ? str : \"0\" + str;\n};\n\nconst Timer = ({ time }) => {\n  const minutes = pad(Math.floor(time / 60));\n  const seconds = pad(time % 60);\n\n  return (\n    <section className=\"timer\">\n      <h1>{minutes}:{seconds}</h1>\n    </section>\n  );\n};\n\nexport default Timer;","import React from 'react';\n\nconst watch = String.fromCodePoint(0x231A);\n\nconst Log = ({ history, onRemoveHistory }) => (\n  <>\n    {history.length !== 0 &&\n      <section className=\"log\">\n        <h3>{watch} History</h3>\n        <ul>\n          {history.map((item, index) => (\n            <li key={index}>\n              {item.time}\n              {' - '}\n              {item.type}\n              {' ('}\n              {Math.floor(item.length / 60)}\n              {' minutes) '}\n\n              <span\n                className=\"remove\"\n                onClick={() => onRemoveHistory(index)}\n              >\n                delete\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    }\n  </>\n);\n\nexport default Log;","import React, { useState, useEffect } from 'react';\nimport Controls from './Controls';\nimport Timer from './Timer';\nimport Log from './Log';\n\nconst tomato = String.fromCodePoint(0x1F345);\n\nconst durations = {\n  POMO: { length: 1500, type: 'pomo' },\n  SHORT: { length: 300, type: 'break' },\n  LONG: { length: 900, type: 'break' },\n};\n\nconst App = () => {\n  const [running, setRunning] = useState(false);\n  const [time, setTime] = useState(durations.POMO.length);\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (time === 0) {\n        setRunning(false);\n        setTime(durations.POMO.length);\n        return false;\n      }\n      if (running) setTime(time => time - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [running, setRunning, time]);\n\n  const startTimer = duration => {\n    const time  =new Date().toLocaleTimeString('en-US', {\n      hour12: true,\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    setTime(duration.length);\n    setRunning(true);\n    setHistory([\n      ...history,\n      { ...duration, time }\n    ]);\n  };\n\n  const removeHistory = index => {\n    setHistory(history.filter((_, i) => i !== index));\n  };\n  \n  return (\n    <div>\n      <div className=\"wrapper\">\n        <h2>{tomato} Pomodoro Timer</h2>\n\n        <Timer time={time} />\n\n        <Controls\n          running={running}\n          onStart={() => startTimer(durations.POMO)}\n          onShortBreak={() => startTimer(durations.SHORT)}\n          onLongBreak={() => startTimer(durations.LONG)}\n          onClear={() => {\n            setRunning(false);\n            setTime(durations.POMO.length);\n          }}\n         />\n\n         <Log\n          history={history}\n          onRemoveHistory={removeHistory}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}